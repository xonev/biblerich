// Generated by CoffeeScript 1.6.2
(function() {
  var CardView, Flashcards, Router, _ref, _ref1,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.Flashcards = Flashcards = {
    init: function(pageUrl, cardData) {
      var router;

      router = new Flashcards.Router({
        cardData: cardData
      });
      Backbone.history.start({
        root: pageUrl
      });
      return router.firstCard();
    }
  };

  Flashcards.Router = Router = (function(_super) {
    __extends(Router, _super);

    function Router() {
      _ref = Router.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Router.prototype.routes = {
      "card/:id": "showCard"
    };

    Router.prototype.cardViews = [];

    Router.prototype.initialize = function(_arg) {
      this.cardData = _arg.cardData;
    };

    Router.prototype.showCard = function(id) {
      var index, view;

      index = id - 1;
      if (this.cardViews[index]) {
        view = this.cardViews[index];
      } else if (this.cardData.length > index) {
        view = this.cardViews[index] = new CardView(this.cardData[index]);
      }
      return $('body > div').append(view.render());
    };

    Router.prototype.firstCard = function() {
      return this.navigate('card/1', {
        trigger: true
      });
    };

    return Router;

  })(Backbone.Router);

  Flashcards.CardView = CardView = (function(_super) {
    __extends(CardView, _super);

    function CardView() {
      _ref1 = CardView.__super__.constructor.apply(this, arguments);
      return _ref1;
    }

    CardView.prototype.className = 'card';

    CardView.prototype.initialize = function(_arg) {
      this.img = _arg.img, this.text = _arg.text;
      return this.$el.append("<img src='/img/flashcards/" + this.img + "'></img>" + this.text);
    };

    CardView.prototype.render = function() {
      return this.el;
    };

    return CardView;

  })(Backbone.View);

}).call(this);
