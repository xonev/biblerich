// Generated by CoffeeScript 1.6.3
(function() {
  var Tutorial, TutorialView, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Tutorial = window.Tutorial || {};

  Tutorial.TutorialView = TutorialView = (function(_super) {
    __extends(TutorialView, _super);

    function TutorialView() {
      _ref = TutorialView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    TutorialView.prototype.events = {
      "click .cancel": "close",
      "click .next": "next"
    };

    TutorialView.prototype.initialize = function(_arg) {
      this.exampleViews = _arg.exampleViews;
      return this.viewIndex = 0;
    };

    TutorialView.prototype.template = "<div class=\"modal hide fade\" id='tutorial'>\n  <div class=\"modal-header\">\n    <button type=\"button\" class=\"close cancel\" aria-hidden=\"true\">&times;</button>\n    <h3>Tutorial</h3>\n  </div>\n  <div class=\"modal-body\">\n  </div>\n  <div class=\"modal-footer\">\n    <a href=\"#\" class=\"cancel btn\">Cancel Tutorial</a>\n    <a href=\"#\" class=\"btn btn-primary next\">Next</a>\n  </div>\n</div>";

    TutorialView.prototype.render = function() {
      this.$modal = $(this.template);
      this.$el.append(this.$modal);
      this.renderExample();
      $('body').append(this.el);
      return this.$modal.modal({
        backdrop: false
      });
    };

    TutorialView.prototype.renderExample = function() {
      if (this.currView) {
        this.currView.cleanup();
        this.$currHtml.remove();
      }
      this.currView = this.exampleViews[this.viewIndex];
      this.$currHtml = $(this.currView.render());
      this.$el.find('.modal-body').append(this.$currHtml);
      return this.currView.init();
    };

    TutorialView.prototype.cleanupExample = function() {
      return this.currView.cleanup();
    };

    TutorialView.prototype.close = function() {
      this.trigger('dismiss-tutorial');
      return this.$modal.modal('hide');
    };

    TutorialView.prototype.next = function() {
      if (this.viewIndex < this.exampleViews.length - 1) {
        this.viewIndex++;
        return this.renderExample();
      } else {
        this.cleanupExample();
        return this.$modal.modal('hide');
      }
    };

    return TutorialView;

  })(Backbone.View);

}).call(this);
